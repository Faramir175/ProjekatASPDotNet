@model MojAtar.Core.DTO.RadnjaDTO
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Dodaj / Izmeni Radnju";
}

<h2>@(Model.Id == null ? "Dodaj Radnju" : "Izmeni Radnju")</h2>

<form method="post" asp-action="@(Model.Id == null ? "Dodaj" : "Izmeni")" asp-controller="Radnja">
    @if (Model.Id != null)
    {
        <input type="hidden" asp-for="Id" />
    }

    <div class="form-group">
        <label for="IdParcela">Parcela</label>
        <select asp-for="IdParcela" class="form-control" asp-items="ViewBag.ParceleSelectList">
            <option value="">-- Izaberite parcelu --</option>
        </select>
    </div>

    <div class="form-group">
        <label asp-for="DatumIzvrsenja">Datum izvršenja</label>
        <input asp-for="DatumIzvrsenja" class="form-control" type="date" />
    </div>

    @if (Model.Id == null)
    {
        <div class="form-group">
            <label asp-for="TipRadnje">Tip radnje</label>
            <select asp-for="TipRadnje" class="form-control" asp-items="Html.GetEnumSelectList<MojAtar.Core.Domain.Enums.RadnjaTip>()"></select>
        </div>
    }
    else
    {
        <input type="hidden" asp-for="TipRadnje" />
        <div class="form-group">
            <label>Tip radnje</label>
            <input class="form-control" value="@Model.TipRadnje" disabled />
        </div>
    }

    <div class="form-group">
        <label asp-for="UkupanTrosak">Ukupan trošak (€)</label>
        <input asp-for="UkupanTrosak" class="form-control" type="number" step="0.01" />
    </div>

    <div class="form-group">
        <label asp-for="VremenskiUslovi">Vremenski uslovi</label>
        <input asp-for="VremenskiUslovi" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="Napomena">Napomena</label>
        <textarea asp-for="Napomena" class="form-control"></textarea>
    </div>

    <div class="form-group">
        <label for="IdKultura">Kultura</label>
        <select asp-for="IdKultura" class="form-control" asp-items="ViewBag.KultureSelectList">
            <option value="">-- Izaberite kulturu --</option>
        </select>
    </div>

    <div class="form-group" id="prinosDiv" style="display:@(Model.TipRadnje == MojAtar.Core.Domain.Enums.RadnjaTip.Zetva ? "block" : "none")">
        <label asp-for="Prinos">Prinos (t)</label>
        <input asp-for="Prinos" class="form-control" type="number" step="0.01" />
    </div>

    <div id="listaMasina">
        <label class="form-check-label">Izaberi radne masine koje koristis na ovoj radnji</label>

        @{
            var povezaneMasine = Model.RadneMasine?.ToDictionary(rm => rm.IdRadnaMasina, rm => (double)rm.BrojRadnihSati)
            ?? new Dictionary<Guid, double>();

            int index = 0;
        }

        @foreach (var masina in (IEnumerable<SelectListItem>)ViewBag.RadneMasineSelectList)
        {
            var isChecked = povezaneMasine.ContainsKey(Guid.Parse(masina.Value));
            <div class="form-check">
                <input class="form-check-input masina-checkbox" type="checkbox"
                       id="masinaCheckbox_@masina.Value" value="@masina.Value" data-naziv="@masina.Text"
                @(isChecked ? "checked" : "") />
                <label class="form-check-label" for="masinaCheckbox_@masina.Value">
                    @masina.Text
                </label>
            </div>
            if (isChecked)
            {
                <div class="form-group" id="unos-masina-@masina.Value">
                    <label>Radna mašina: @masina.Text – broj sati</label>
                    <input type="hidden" name="RadneMasine[@index].IdRadnaMasina" value="@masina.Value" />
                    <input type="number" name="RadneMasine[@index].BrojRadnihSati" class="form-control" step="1" min="1" value="@povezaneMasine[Guid.Parse(masina.Value)]" required />
                </div>
                index++;
            }
        }
    </div>

    <div id="masineDetaljiContainer"></div>

    <div id="listaPrikljucnihMasina">
        <label class="form-check-label">Izaberi priključne mašine koje koristis na ovoj radnji</label>

        @{
            var povezanePrikljucne = Model.PrikljucneMasine?.ToDictionary(pm => pm.IdPrikljucnaMasina, pm => (double)pm.BrojRadnihSati)
            ?? new Dictionary<Guid, double>();

            int indexPrik = 0;
        }

        @foreach (var masina in (IEnumerable<SelectListItem>)ViewBag.PrikljucneMasineSelectList)
        {
            var isChecked = povezanePrikljucne.ContainsKey(Guid.Parse(masina.Value));
            <div class="form-check">
                <input class="form-check-input prikljucna-checkbox" type="checkbox"
                       id="prikljucnaCheckbox_@masina.Value" value="@masina.Value" data-naziv="@masina.Text"
                @(isChecked ? "checked" : "") />
                <label class="form-check-label" for="prikljucnaCheckbox_@masina.Value">
                    @masina.Text
                </label>
            </div>
            if (isChecked)
            {
                <div class="form-group" id="unos-prikljucna-@masina.Value">
                    <label>Priključna mašina: @masina.Text – broj sati</label>
                    <input type="hidden" name="PrikljucneMasine[@indexPrik].IdPrikljucnaMasina" value="@masina.Value" />
                    <input type="number" name="PrikljucneMasine[@indexPrik].BrojRadnihSati" class="form-control" step="1" min="1" value="@povezanePrikljucne[Guid.Parse(masina.Value)]" required />
                </div>
                indexPrik++;
            }
        }
    </div>

    <div id="prikljucneDetaljiContainer"></div>

    <div id="listaResursa">
        <label class="form-check-label">Izaberi resurse koje koristiš u ovoj radnji</label>

        @{
            var povezaniResursi = Model.Resursi?.ToDictionary(r => r.IdResurs, r => (r.Kolicina, r.DatumKoriscenja))
            ?? new Dictionary<Guid, (double, DateTime)>();
            int indexResurs = 0;
        }

        @foreach (var resurs in (IEnumerable<SelectListItem>)ViewBag.ResursiSelectList)
        {
            var isChecked = povezaniResursi.ContainsKey(Guid.Parse(resurs.Value));
            <div class="form-check">
                <input class="form-check-input resurs-checkbox" type="checkbox"
                       id="resursCheckbox_@resurs.Value" value="@resurs.Value" data-naziv="@resurs.Text"
                @(isChecked ? "checked" : "") />
                <label class="form-check-label" for="resursCheckbox_@resurs.Value">
                    @resurs.Text
                </label>
            </div>
            if (isChecked)
            {
                var resData = povezaniResursi[Guid.Parse(resurs.Value)];
                <div class="form-group" id="unos-resurs-@resurs.Value">
                    <label>Resurs: @resurs.Text – količina i datum</label>
                    <input type="hidden" name="Resursi[@indexResurs].IdResurs" value="@resurs.Value" />
                    <input type="number" name="Resursi[@indexResurs].Kolicina" class="form-control mb-2" step="0.1" min="0" value="@resData.Item1" required />
                    <input type="date" name="Resursi[@indexResurs].DatumKoriscenja" class="form-control" value="@resData.Item2.ToString("yyyy-MM-dd")" required />
                </div>
                indexResurs++;
            }
        }
    </div>

    <div id="resursDetaljiContainer"></div>


    <button type="submit" class="btn btn-success mt-3">Sačuvaj</button>
    <a asp-action="RadnjePoParceli" asp-route-idParcela="@Model.IdParcela" class="btn btn-secondary mt-3">Nazad</a>
</form>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const tipRadnjeSelect = document.getElementById("TipRadnje");
            const prinosDiv = document.getElementById("prinosDiv");

            if (tipRadnjeSelect) {

                if (tipRadnjeSelect.value == "@((int)MojAtar.Core.Domain.Enums.RadnjaTip.Zetva)") {
                    prinosDiv.style.display = "block";
                } else {
                    prinosDiv.style.display = "none";
                }

                tipRadnjeSelect.addEventListener("change", function () {
                    if (this.value == "@((int)MojAtar.Core.Domain.Enums.RadnjaTip.Zetva)") {
                        prinosDiv.style.display = "block";
                    } else {
                        prinosDiv.style.display = "none";
                    }
                });
            }
        });

        let masineBrojac = 0;
        const masineMap = new Map();

        document.querySelectorAll('.masina-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                const id = this.value;
                const naziv = this.getAttribute('data-naziv');
                const container = document.getElementById("masineDetaljiContainer");

                if (this.checked) {
                    if (!masineMap.has(id)) {
                        const index = masineBrojac++;
                        masineMap.set(id, index);

                        const div = document.createElement("div");
                        div.classList.add("form-group");
                        div.id = `unos-masina-${id}`;
                        div.innerHTML = `
                            <label>Radna mašina: ${naziv} – broj sati</label>
                            <input type="hidden" name="RadneMasine[${index}].IdRadnaMasina" value="${id}" />
                            <input type="number" name="RadneMasine[${index}].BrojRadnihSati" class="form-control" step="1" min="1" required />
                        `;
                        container.appendChild(div);
                    }
                } else {
                    if (masineMap.has(id)) {
                        container.removeChild(document.getElementById(`unos-masina-${id}`));
                        masineMap.delete(id);
                    }
                }
            });
        });

        masineBrojac = document.querySelectorAll('#masineDetaljiContainer input[name^="RadneMasine["]').length;

        let prikljucneBrojac = 0;
        const prikljucneMap = new Map();

        document.querySelectorAll('.prikljucna-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                const id = this.value;
                const naziv = this.getAttribute('data-naziv');
                const container = document.getElementById("prikljucneDetaljiContainer");

                if (this.checked) {
                    if (!prikljucneMap.has(id)) {
                        const index = prikljucneBrojac++;
                        prikljucneMap.set(id, index);

                        const div = document.createElement("div");
                        div.classList.add("form-group");
                        div.id = `unos-prikljucna-${id}`;
                        div.innerHTML = `
                            <label>Priključna mašina: ${naziv} – broj sati</label>
                            <input type="hidden" name="PrikljucneMasine[${index}].IdPrikljucnaMasina" value="${id}" />
                            <input type="number" name="PrikljucneMasine[${index}].BrojRadnihSati" class="form-control" step="1" min="1" required />
                        `;
                        container.appendChild(div);
                    }
                } else {
                    if (prikljucneMap.has(id)) {
                        container.removeChild(document.getElementById(`unos-prikljucna-${id}`));
                        prikljucneMap.delete(id);
                    }
                }
            });
        });

        prikljucneBrojac = document.querySelectorAll('#listaPrikljucnihMasina input[name^="PrikljucneMasine["]').length;

        let resursBrojac = document.querySelectorAll('#listaResursa input[name^="Resursi["]').length;
        const resursMap = new Map();

        document.querySelectorAll('.resurs-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                const id = this.value;
                const naziv = this.getAttribute('data-naziv');
                const container = document.getElementById("resursDetaljiContainer");

                if (this.checked) {
                    if (!resursMap.has(id)) {
                        const index = resursBrojac++;
                        resursMap.set(id, index);

                        const div = document.createElement("div");
                        div.classList.add("form-group");
                        div.id = `unos-resurs-${id}`;
                        div.innerHTML = `
                            <label>Resurs: ${naziv} – količina i datum</label>
                            <input type="hidden" name="Resursi[${index}].IdResurs" value="${id}" />
                            <input type="number" name="Resursi[${index}].Kolicina" class="form-control mb-2" step="0.1" min="0" required />
                            <input type="date" name="Resursi[${index}].DatumKoriscenja" class="form-control" required />
                        `;
                        container.appendChild(div);
                    }
                } else {
                    if (resursMap.has(id)) {
                        container.removeChild(document.getElementById(`unos-resurs-${id}`));
                        resursMap.delete(id);
                    }
                }
            });
        });

        resursBrojac = document.querySelectorAll('#listaResursa input[name^="Resursi["]').length;


    </script>
}